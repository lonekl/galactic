Usage:
		./manage arguments
		Arguments are mainly tasks that the program should do.
		Like here:
				./manage bi
				which will build the whole project and create a disk image from it.
		It's possible to add some flags to configure tasks:
				./manage b[release]i
				which will build project in release mode (more optimized build) and then build disk image normally.
				In square brackets you can put flags and values for each task.
		You can also set values for tasks:
				./manage r[memory=1GIB].
				which will run the project built in Qemu with 1 GIB of memory.
		It's also possible to configure some more general things:
				./manage g[abort=end.task]bir
				which will abort the current task and switch to another if the project fails, and so on.
				The "g" here is just a symbol for configuration
tasks:
		h Show this help message.
		b Build the whole project.
		i Create a disk image of the operating system (in `target/disk.img` by default).
		r Run project in Qemu.
		g General configuration. Does nothing more than configure general settings.
Tips:
		Tasks are executed in the order you write them, so if you write something like this:
		./manage rib
		Then it will start qemu with the old disk image, then build the disk image with the old builds, and finally build the workspace.
		So it wouldn't make sense.
		You can also run tasks twice, e.g:
		./manage g[arch=i538]i[file=dev.x86.img]b[release,arch=x86_64]i[file=release.x86_64.img]r
		It looks disgusting, but what it does is
				build project for i586 and create disk image in `dev.x86.img` file,
				build project for x86_64, create disk image in `release.x86_64.img` file and run it in qemu.
